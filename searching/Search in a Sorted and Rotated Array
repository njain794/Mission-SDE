int Search(vector<int> v, int k) 
{
    int start=0;
    int end=v.size()-1;
    int res=-1;
    while(start<=end)
    {
        int mid=start+(end-start)/2;
        
        if(v[mid]==k)
        {
            return mid;
        }
        else if(v[mid]<v[mid+1] and v[mid]<v[mid-1])
        {
            res=mid;
            break;
        }
        else if(v[mid]>v[end])
        {
            start=mid+1;
        }
        else
        {
            end=mid-1;
        }
    }
    if(res!=-1)
    {
        if(binary_search(v.begin(),v.begin()+res,k))
        {
            return lower_bound(v.begin(),v.begin()+res,k)-v.begin();
        }
        else if(binary_search(v.begin()+res,v.end(),k))
        {
            return lower_bound(v.begin()+res,v.end(),k)-v.begin();
        }
        else
        {
            return -1;
        }
    }
    else
    {
        if(binary_search(v.begin(),v.end(),k))
        {
            return lower_bound(v.begin(),v.end(),k)-v.begin();
        }
        else
        {
            return -1;
        }
    }
}
