class Solution{

	public:
	/*int diff(int arr[],int n,int subsum,int tsum)
	{
	    if(n==0)
	    {
	        return abs(tsum-(2*subsum));
	    }
	    return min(diff(arr,n-1,subsum+arr[n-1],tsum),diff(arr,n-1,subsum,tsum));
	}*/
	
	int minDiffernce(int arr[], int n) 
	{ 
	    int sum=0;
	    for(int i=0;i<n;i++)
	    {
	        sum+=arr[i];
	    }
	    int subsum=0;
	    bool dp[n+1][sum+1];
	    //memset(dp,false,sizeof(dp)/sizeof(int));
	    for(int i=0;i<=n;i++)
	    {
	        for(int j=0;j<=sum;j++)
	        {
	            if(j==0 or (i==0 and j==0))
	            {
	                dp[i][j]=true;
	            }
	            else if(i==0)
	            {
	                dp[i][j]=false;
	            }
	            else if(arr[i-1]<=j)
	            {
	                dp[i][j]=dp[i-1][j-arr[i-1]] or dp[i-1][j];
	            }
	            else
	            {
	                dp[i][j]=dp[i-1][j];
	            }
	        }
	    }
	    int diff=0;
	    for(int j=sum/2;j>=0;j--)
	    {
	        if(dp[n][j]==true)
	        {
	            diff=sum-(2*j);
	            break;
	        }
	    }
	    return diff;
	    //return diff(arr,n,subsum,sum);
	    // Your code goes here
	} 
};
