#include <bits/stdc++.h>
using namespace std;
int knap(int n,int wt[],int val[])
{
    int dp[n+1][n+1];
    for(int i=0;i<=n;i++)
    {
        for(int j=0;j<=n;j++)
        {
            if(i==0 or j==0)
            {
                dp[i][j]=0;
            }
            else if(wt[i-1]<=j)
            {
                dp[i][j]=max(val[i-1]+dp[i][j-wt[i-1]],dp[i-1][j]);
            }
            else
            {
                dp[i][j]=dp[i-1][j];
            }
        }
    }
    return dp[n][n];
}
int main() 
{
    int t;
    cin>>t;
    while(t--)
    {
        int n,wt[102],val[102];
        cin>>n;
        /*for(int i=0;i<n;i++)
        {
            wt[i]=i+1;
        }*/
        for(int i=0;i<n;i++)
        {
            wt[i]=i+1;
            cin>>val[i];
        }
        cout<<knap(n,wt,val)<<"\n";
    }

	//code
	return 0;
}
