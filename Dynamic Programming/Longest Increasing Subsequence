#include <bits/stdc++.h>
using namespace std;
int dp[1001][1001];
int lis(int n,int arr[],int x,int i)
{
    if(i==n or n==0)
    {
        return 0;
    }
    if(dp[i][x]!=-1 and x!=-1)
    {
        return dp[i][x];
    }
    if(arr[i]>x)
    {
        return dp[i][x]=max(1+lis(n,arr,arr[i],i+1),lis(n,arr,x,i+1));
    }
    else
    {
        return dp[i][x]=lis(n,arr,x,i+1);
    }
}
int solve(int n,int arr[])
{
    int x=-1;
    int i=0;
    memset(dp,-1,sizeof(dp));
    return lis(n,arr,x,i);
    //return *max_element(dp,dp+n);
}
int main() 
{
    int t;
    cin>>t;
    while(t--)
    {
        int n,arr[1001];
        cin>>n;
        for(int i=0;i<n;i++)
        {
            cin>>arr[i];
        }
        cout<<solve(n,arr)<<"\n";
    }
	//code
	return 0;
}
